---
- name: Deploy SSH Keys and Configure System Access
  hosts: ubuntu
  gather_facts: true
  become: true
  vars:
    ssh_public_key_path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa.pub"

  tasks:
    - name: Check if SSH public key exists
      ansible.builtin.stat:
        path: "{{ ssh_public_key_path }}"
      delegate_to: localhost
      register: ssh_key_check
      become: false

    - name: Fail if no SSH public key found
      ansible.builtin.fail:
        msg: |
          SSH public key not found at {{ ssh_public_key_path }}.
          Please generate one with: ssh-keygen -t rsa -b 4096
      when: not ssh_key_check.stat.exists

    - name: Read SSH public key content
      ansible.builtin.slurp:
        src: "{{ ssh_public_key_path }}"
      delegate_to: localhost
      register: ssh_public_key_content
      become: false
      delegate_facts: true

    - name: Ensure .ssh directory exists
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.ssh"
        state: directory
        mode: '0700'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Deploy SSH public key
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ ssh_public_key_content.content | b64decode | trim }}"
        state: present
        comment: "Deployed via Ansible"

    - name: Configure passwordless sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/{{ ansible_user }}
        line: "{{ ansible_user }} ALL=(ALL) NOPASSWD:ALL"
        create: true
        mode: '0440'
        validate: 'visudo -cf %s'

    - name: Update package cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Install essential packages
      ansible.builtin.apt:
        name:
          - curl
          - wget
          - vim
          - htop
          - git
        state: present

    - name: Test passwordless sudo
      ansible.builtin.command:
        cmd: sudo whoami
      register: sudo_test
      changed_when: false
      become: false

    - name: Display deployment summary
      ansible.builtin.debug:
        msg:
          - "✅ SSH key deployed successfully to {{ inventory_hostname }}"
          - "✅ Passwordless sudo configured for {{ ansible_user }}"
          - "✅ Essential packages installed"

    # Phase: Master Node SSH Key Setup for Inter-Node Communication
    - name: Check if master node SSH key exists
      ansible.builtin.stat:
        path: "/home/{{ ansible_user }}/.ssh/id_rsa_cluster"
      register: master_key_check
      when: inventory_hostname == 'ubuntu-1.local'
      become: false

    - name: Generate SSH key pair on master node
      ansible.builtin.command:
        cmd: >-
          ssh-keygen -t rsa -b 4096
          -f /home/{{ ansible_user }}/.ssh/id_rsa_cluster
          -N ''
          -C "{{ ansible_user }}@{{ inventory_hostname }}-cluster-master"
      become: false
      when:
        - inventory_hostname == 'ubuntu-1.local'
        - not master_key_check.stat.exists
      register: key_generation
      changed_when: key_generation.rc == 0

    - name: Set proper permissions on master SSH keys
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: "{{ item.mode }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop:
        - { path: "/home/{{ ansible_user }}/.ssh/id_rsa_cluster", mode: '0600' }
        - { path: "/home/{{ ansible_user }}/.ssh/id_rsa_cluster.pub", mode: '0644' }
      when:
        - inventory_hostname == 'ubuntu-1.local'
        - not master_key_check.stat.exists or key_generation is changed
      become: false

    - name: Read master node public key
      ansible.builtin.slurp:
        src: "/home/{{ ansible_user }}/.ssh/id_rsa_cluster.pub"
      register: master_public_key
      delegate_to: ubuntu-1.local
      become: false
      when: "'ubuntu-1.local' in groups['ubuntu']"

    - name: Deploy master node public key to worker nodes
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ master_public_key.content | b64decode | trim }}"
        state: present
        comment: "Master node (ubuntu-1) key"
      when:
        - inventory_hostname != 'ubuntu-1.local'
        - master_public_key is defined

    - name: Display master key deployment summary
      ansible.builtin.debug:
        msg:
          - "✅ Master node SSH key setup completed"
          - "✅ Worker node {{ inventory_hostname }} can now accept SSH from ubuntu-1.local"
      when:
        - inventory_hostname != 'ubuntu-1.local'
        - master_public_key is defined
